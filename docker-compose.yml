services:
  # Servicio MySQL para Inventario y Orquestador
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=inventario_db
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mynetwork
    restart: always

  # Servicio PostgreSQL para Préstamos
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: prestamos_db
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - pg_data:/var/lib/postgresql/data

  # Servicio MongoDB para Gestión de Usuarios
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - mynetwork
    restart: always

  # Servicio del Orquestador (Biblioteca)
  orquestador:
    build: .
    container_name: biblioteca_orquestador
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/biblioteca_db
      - SPRING_DATASOURCE_USERNAME=mysqluser
      - SPRING_DATASOURCE_PASSWORD=mysqlpass
    ports:
      - "8082:8082"
    networks:
      - mynetwork
    depends_on:
      - mysql
    restart: always

  # Servicio de Inventario
  inventario:
    build: ../microservicio-inventario
    container_name: spring_app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/inventario_db
      - SPRING_DATASOURCE_USERNAME=mysqluser
      - SPRING_DATASOURCE_PASSWORD=mysqlpass
    ports:
      - "8080:8080"
    networks:
      - mynetwork
    depends_on:
      - mysql
    restart: always

  # Servicio de Préstamos
  prestamo-service:
    build: ../Prestamo
    container_name: prestamo_service
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:db/prestamos_db
    ports:
      - "8004:8004"
    networks:
      - mynetwork
    depends_on:
      - postgres

  # Servicio de Gestión de Usuarios (C# con MongoDB)
  gestionusuario:
    image: gestionusuarioapi
    build:
      context: ../GestionUsuarioBiblioteca
      dockerfile: GestionUsuarioBiblioteca/Dockerfile
    container_name: gestionusuario_service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:5001"
    networks:
      - mynetwork
    depends_on:
      - mongo
    restart: always

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql_data:
  pg_data:
  mongo-data:
